#!/usr/bin/env bash	

echo $APPTAINER_COMMAND
source /cvmfs/cms.cern.ch/cmsset_default.sh
pushd $PWD
ls /home
cd /home/cmsusr/CMSSW_14_1_0_pre4
cmsenv  
popd
pwd
base=$1
input_dir=$2
dest=$(realpath $3)
output=$dest/$input_dir

function printAndRun(){
    echo "$@"
    $@
}

mkdir -p "$output"
(
    cd $base/$input_dir
    find . -iname '*.root' | xargs -i cp   {}  "$output"
    find . -iname '*.txt'  | xargs -i cp   {}  "$output"
    find . -iname '*.json'  | xargs -i cp {} "$output"
)

echo "STARTING COMBINE"
common_opts="--rMin=-5 --rMax=20 --cminDefaultMinimizerStrategy 1 --cminFallbackAlgo Minuit2,Migrad,0:0.1 --cminFallbackAlgo Minuit2,Migrad,1:1.0 --cminFallbackAlgo Minuit2,Migrad,0:1.0 --X-rtd MINIMIZER_MaxCalls=999999999 --X-rtd MINIMIZER_analytic  --X-rtd FAST_VERTICAL_MORPH"


function runSignal(){
    printAndRun text2workspace.py "$output/datacard.txt" -o "$output/datacard.root"
    printAndRun combineTool.py -M Significance -d "$output/datacard.root"  --there -n .sig  "$common_opts" 2>&1 | tee "$output/sig.log"
    printAndRun combineTool.py -M MultiDimFit -d  "$output/datacard.root"  --there -n .fit  "$common_opts" 2>&1 | tee "$output/fit.log"
}


function runNoInject(){
    printAndRun text2workspace.py "$output/datacard.txt" -o "$output/datacard.root"
    printAndRun combineTool.py -M AsymptoticLimits -d "$output/datacard.root"  --there -n .limasimov  -t -1   "$common_opts" 2>&1 | tee "$output/limasimov.log"
    printAndRun combineTool.py -M AsymptoticLimits -d "$output/datacard.root"  --there -n .lim -t -1          "$common_opts" 2>&1 | tee "$output/lim.log"
    printAndRun combineTool.py -M MultiDimFit -d      "$output/datacard.root"  --there -n .fit                "$common_opts" 2>&1 | tee "$output/fit.log"
}


is_zero=$(cat $output/metadata.json | jq '.fit_params.injected_signal == 0.0')
if [[ $is_zero == true ]]; then
    echo "Running in background only mode"
    runNoInject
else
    echo "Running in signal inject mode"
    runSignal 
fi

    # printAndRun combineTool.py -M Significance -d $base/datacard.root -t -1  --there -n .sig1 --expectSignal=1 $common_opts > $base/sig1.log
    # printAndRun combineTool.py -M Significance -d $base/datacard.root -t -1  --there -n .sig4 --expectSignal=4 $common_opts > $base/sig4.log
    # printAndRun combineTool.py -M Significance -d $base/datacard.root -t -1  --there -n .sig9 --expectSignal=9 $common_opts > $base/sig9.log
    # printAndRun combineTool.py -M Significance -d $base/datacard.root -t -1  --there -n .sig16 --expectSignal=16 $common_opts > $base/sig16.log
    # 
    # printAndRun combineTool.py -M MultiDimFit -d $base/datacard.root  -t -1 --there -n .fit1 --expectSignal=1 $common_opts > $base/fit1.log
    # printAndRun combineTool.py -M MultiDimFit -d $base/datacard.root  -t -1 --there -n .fit4 --expectSignal=4 $common_opts > $base/fit4.log
    # printAndRun combineTool.py -M MultiDimFit -d $base/datacard.root  -t -1 --there -n .fit9 --expectSignal=9 $common_opts > $base/fit9.log
    # printAndRun combineTool.py -M MultiDimFit -d $base/datacard.root  -t -1 --there -n .fit16 --expectSignal=16 $common_opts > $base/fit16.log

    # combineTool.py -M GoodnessOfFit -d $dest/$signal/inject_r_0p0/datacard.root  --there -n .gof_toys --algo KS -t 500 --rMin=-5 --rMax=20
    # combineTool.py -M GoodnessOfFit -d $dest/$signal/inject_r_0p0/datacard.root  --there -n .gof_obs --algo KS  --rMin=-5 --rMax=20
    # combineTool.py -M CollectGoodnessOfFit --input *.gof_toys* *.gof_obs* -m 125.0 -o gof.json 
